using Pkg
using HDF5
Pkg.add("LaTeXStrings") 
Pkg.add("CairoMakie")

Pkg.add("Plots")
using Plots

#using LaTeXStrings
#using CairoMakie


#open and save the h5 file in the directory the script is in
#go into launch.json and settings.json and set it to the directory where the h5 file is

fname = "dimuons_hepfile.h5"
print("fname was run\n")

fid = h5open(fname, "r")
print("fid was run\n")

names = keys(fid)
print("names was run\n")

#############################

#Print the groups
print(names,"\n")

#Get the groups
muon1= fid["muon1"]
muon2= fid["muon2"]

#Print the datasets
print(keys(muon1),"\n")
print(keys(muon2),"\n")

#Get the datasets
E1 = muon1["e"][]
px1 = muon1["px"][]
py1 = muon1["py"][]
pz1 = muon1["pz"][]
charge1 = muon1["q"][]

E2 = muon2["e"][]
px2 = muon2["px"][]
py2 = muon2["py"][]
pz2 = muon2["pz"][]
charge2 = muon2["q"][]


###
# Challenge 1 - Classical mechanics
# Part A
###
p= px1.^2
pmag1 = sqrt.(px1.^2 + py1.^2 + pz1.^2)
pmag2 = sqrt.(px2.^2 + py2.^2 + pz2.^2)

m1=(pmag1.^2)./(2*E1)
m2=(pmag2.^2)./(2*E2)

p1= histogram(m1, bins=1000, xlims=(-1,75), xlabel= "Mass of muon #1 (GeV/c^2)", color= :red, lc=:match)
p2= histogram(m2, bins=1000, xlims=(-1,75), xlabel= "Mass of muon #2 (GeV/c^2)", color= :blue, lc=:match)
Plots.plot(p1,p2,layout=(1,2), legend=false)
savefig("Part_1A.png")

###
# Part B
###

E = E1 + E2
px = px1 + px2
py = py1 + py2
pz = pz1 + pz2

charge = charge1 + charge2
pmag = sqrt.(px.^2 + py.^2 + pz.^2)
m = (pmag.^2)./(2*E)

p1= histogram(m, bins=LinRange(0,50,100), label= "All charge combinations", xlabel="Mass (GeV/c^2)", lc=:match)
p2= histogram(m[charge.==2], bins=LinRange(0,50,100), label= "2+", xlabel="Mass (GeV/c^2)", lc=:match)
p3= histogram(m[charge.==-2], bins=LinRange(0,50,100), label= "2-", xlabel="Mass (GeV/c^2)", lc=:match)
p4= histogram(m[charge.==0], bins=LinRange(0,50,100), label= "Electrically neutral", xlabel="Mass (GeV/c^2)", lc=:match)
Plots.plot(p1,p2,p3,p4,layout=(4,1), legend=true)
savefig("Part_1B.png")

###
# Challenge 2 - special relativity
# Part A
###

function invmass(E,pmag)
    m2= E.^2 .- pmag.^2
    pos= sqrt.(m2[m2.>=0])
    neg= -sqrt.(-m2[m2.<0])
    return pos,neg
end


pos1,neg1= invmass(E1,pmag1)
#print("Pos1: ",length(pos1),"\n")   
#print("Neg1: ",length(neg1),"\n")    

pos2,neg2= invmass(E2,pmag2)
#print("Pos2: ",length(pos2),"\n")   
#print("Neg2: ",length(neg2),"\n")   

m1_sr= [pos1;neg1]
m2_sr= [pos2;neg2]

#print("m1_sr: ",length(m1_sr),"\n")   
#print("m2_sr: ",length(m2_sr),"\n")


p1= histogram(m1_sr, bins=LinRange(0,0.2,50), xlabel="Mass of muon #1 (GeV/c^2)", lc=:match)
p2= histogram(m2_sr, bins=LinRange(0,0.2,50), xlabel="Mass of muon #2 (GeV/c^2)", lc=:match)
Plots.plot(p1,p2,layout=(1,2), legend=false)
savefig("Part_2A.png")

###
# Part B
###

m_sr = sqrt.(E.^2 .- pmag.^2)

# mass = 0-120
lo = 0
hi = 120

p1= histogram(m_sr, bins=LinRange(lo,hi,100), label= "All charge combinations", xlabel="Mass (GeV/c^2)", lc=:match)
p2= histogram(m_sr[charge.==2], bins=LinRange(lo,hi,100), label= "2+", xlabel="Mass (GeV/c^2)", lc=:match)
p3= histogram(m_sr[charge.==-2], bins=LinRange(lo,hi,100), label= "2-", xlabel="Mass (GeV/c^2)", lc=:match)
p4= histogram(m_sr[charge.==0], bins=LinRange(lo,hi,100), label= "Electrically neutral", xlabel="Mass (GeV/c^2)", lc=:match)
Plots.plot(p1,p2,p3,p4,layout=grid(2,2), legend=true)
plot!(size=(800,450))
savefig("Part_2B1.png")

# mass = 2-4
lo = 2
hi = 4

p1= histogram(m_sr, bins=LinRange(lo,hi,100), label= "All charge combinations", xlabel="Mass (GeV/c^2)", lc=:match)
p2= histogram(m_sr[charge.==2], bins=LinRange(lo,hi,100), label= "2+", xlabel="Mass (GeV/c^2)", lc=:match)
p3= histogram(m_sr[charge.==-2], bins=LinRange(lo,hi,100), label= "2-", xlabel="Mass (GeV/c^2)", lc=:match)
p4= histogram(m_sr[charge.==0], bins=LinRange(lo,hi,100), label= "Electrically neutral", xlabel="Mass (GeV/c^2)", lc=:match)
Plots.plot(p1,p2,p3,p4,layout=grid(2,2), legend=true)
plot!(size=(800,450))
savefig("Part_2B2.png")

# mass = 8-12
lo = 8
hi = 12

p1= histogram(m_sr, bins=LinRange(lo,hi,100), label= "All charge combinations", xlabel="Mass (GeV/c^2)", lc=:match)
p2= histogram(m_sr[charge.==2], bins=LinRange(lo,hi,100), label= "2+", xlabel="Mass (GeV/c^2)", lc=:match)
p3= histogram(m_sr[charge.==-2], bins=LinRange(lo,hi,100), label= "2-", xlabel="Mass (GeV/c^2)", lc=:match)
p4= histogram(m_sr[charge.==0], bins=LinRange(lo,hi,100), label= "Electrically neutral", xlabel="Mass (GeV/c^2)", lc=:match)
Plots.plot(p1,p2,p3,p4,layout=grid(2,2), legend=true)
plot!(size=(800,450))
savefig("Part_2B3.png")

# mass = 70-120
lo = 70
hi = 120

p1= histogram(m_sr, bins=LinRange(lo,hi,100), label= "All charge combinations", xlabel="Mass (GeV/c^2)", lc=:match)
p2= histogram(m_sr[charge.==2], bins=LinRange(lo,hi,100), label= "2+", xlabel="Mass (GeV/c^2)", lc=:match)
p3= histogram(m_sr[charge.==-2], bins=LinRange(lo,hi,100), label= "2-", xlabel="Mass (GeV/c^2)", lc=:match)
p4= histogram(m_sr[charge.==0], bins=LinRange(lo,hi,100), label= "Electrically neutral", xlabel="Mass (GeV/c^2)", lc=:match)
Plots.plot(p1,p2,p3,p4,layout=grid(2,2), legend=true)
plot!(size=(800,450))
savefig("Part_2B4.png")
